import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

    /*
     * Complete the 'insertionSort1' function below.
     *
     * The function accepts following parameters:
     *  1. INTEGER n
     *  2. INTEGER_ARRAY arr
     */

    public static void insertionSort1(int n, List<Integer> arr) {
    // Write your code here
    int k;
    
        k=arr.get(n-1);
        for(int j=1;j<=n;j++){
            if(j==n & k<arr.get(0)) {
                     arr.set(0, k);
                }
             else if(k<arr.get(n-1-j)){
            arr.set(n-j, arr.get(n-1-j));
        }
        else{
            arr.set(n-j, k);
                for (int i : arr) {
                     System.out.print(i+" "); 
                     
                 } 
                break; 
        }
        for (int i : arr) {
            System.out.print(i+" "); 
            
        }
        System.out.print("\n"); 
            
        }
        
      
    }
    

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        String[] arrTemp = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        List<Integer> arr = new ArrayList<>();

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrTemp[i]);
            arr.add(arrItem);
        }

        Result.insertionSort1(n, arr);

        bufferedReader.close();
    }
}
